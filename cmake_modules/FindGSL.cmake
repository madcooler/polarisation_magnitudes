IF(EXISTS ${PROJECT_CMAKE}/GslConfig.cmake)
    INCLUDE(${PROJECT_CMAKE}/GslConfig.cmake)
ENDIF(EXISTS ${PROJECT_CMAKE}/GslConfig.cmake)

IF (GSL_INCLUDE_DIRS)
    FIND_PATH(GSL_INCLUDE_DIR gsl/gsl_version.h ${GSL_INCLUDE_DIRS})
    FIND_LIBRARY(GSL_LIBRARY gsl ${GSL_LIBRARY_DIRS})
ELSE (GSL_INCLUDE_DIRS)
    FIND_LIBRARY(GSL_LIBRARY gsl $ENV{GSL_HOME}/lib ${QMC_LIBRARY_PATHS})
    FIND_LIBRARY(GSLCBLAS_LIBRARY gslcblas  $ENV{GSL_HOME}/lib ${QMC_LIBRARY_PATHS})
    FIND_PATH(GSL_INCLUDE_DIR gsl/gsl_version.h $ENV{GSL_HOME}/include ${QMC_INCLUDE_PATHS} )
ENDIF (GSL_INCLUDE_DIRS)

IF (GSL_INCLUDE_DIR AND GSL_LIBRARY)
    SET(GSL_FOUND 1 CACHE BOOL "Found GSL library")
    SET(GSL_LIBRARY ${GSL_LIBRARY} ${GSLCBLAS_LIBRARY})
ELSE (GSL_INCLUDE_DIR AND GSL_LIBRARY)
    SET(GSL_FOUND 0 CACHE BOOL "GSL library not found!")
ENDIF (GSL_INCLUDE_DIR AND GSL_LIBRARY)

include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(
    GSL
    REQUIRED_VARS GSL_LIBRARY GSL_INCLUDE_DIR
    FAIL_MESSAGE "Could not find GSL. A part of the ART2 functionality will not be available."
    )

MARK_AS_ADVANCED(
    GSL_INCLUDE_DIR
    GSL_LIBRARY
    GSL_FOUND
    )
